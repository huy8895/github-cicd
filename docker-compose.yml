version: "3.8"
services:
  kafka:
    image: 'bitnami/kafka:3.5.1'
    container_name: kafka
    restart: always
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://172.16.6.45:9094
    networks:
      - data-layer

  redis:
    image: redis
    container_name: redis
    restart: always
    command:
      redis-server --requirepass "redispassword_123"
    ports:
      - '6379:6379'
    environment:
      - REDIS_PASSWORD=1234
    volumes:
      - redis_data:/data
    networks:
      - data-layer

  postgres:
    image: postgres:12.16
    container_name: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - data-layer

  oracle:
    image: oracle/database:19.3.0-se2
    container_name: oracle
    restart: always
    ports:
      - '1521:1521'
    environment:
      - ORACLE_SID=ORCLCDB
      - ORACLE_PDB=ORCLPDB1
      - ORACLE_PWD=oracle
    volumes:
      - oracle_data:/opt/oracle/oradata
    networks:
      - data-layer

networks:
  data-layer:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  oracle_data:
